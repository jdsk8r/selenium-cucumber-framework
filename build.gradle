plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
    id 'java-library'
}

group 'no.sanchezrolfsen.framework'
version '1.1'

repositories {
    mavenCentral()
}

ext {
    junit5Version = '5.8.2'
    seleniumVersion = '4.1.0'
    cucumberVersion = '7.1.0'
    lombokVersion = '1.18.22'
}

dependencies {
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit5Version"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:$junit5Version"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junit5Version"
    implementation "org.seleniumhq.selenium:selenium-api:$seleniumVersion"
    implementation "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion"
    implementation "org.seleniumhq.selenium:selenium-firefox-driver:$seleniumVersion"
    implementation "org.seleniumhq.selenium:selenium-remote-driver:$seleniumVersion"
    implementation "org.seleniumhq.selenium:selenium-support:$seleniumVersion"
    implementation "org.seleniumhq.selenium:selenium-java:$seleniumVersion"
    implementation "io.cucumber:cucumber-core:$cucumberVersion"
    implementation "io.cucumber:cucumber-java:$cucumberVersion"
    implementation "io.cucumber:cucumber-java8:$cucumberVersion"
    implementation "io.cucumber:cucumber-junit:$cucumberVersion"
    compileOnly "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"
    testCompileOnly "org.projectlombok:lombok:$lombokVersion"
    testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'javax.ws.rs:javax.ws.rs-api:2.1.1'
    testImplementation 'org.junit.platform:junit-platform-runner:1.8.2'
    testImplementation 'org.assertj:assertj-core:3.21.0'
    testImplementation 'org.mockito:mockito-core:4.1.0'
}

test {
    useJUnitPlatform()
}

java {
    withSourcesJar()
    withJavadocJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'selenium'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'Selenium 4 Framework with Cucumber'
                description = 'Selenium 4 Framework with cucumber 7'
                url = 'http://framework.sanchezrolfsen.no/'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'diego'
                        name = 'Diego Sanchez-Rolfsen'
                        email = 'diego.sanchez-rolfsen@outlook.com'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/jdsk8r/selenium-cucumber-framework.git'
                    developerConnection = 'scm:git@github.com:jdsk8r/selenium-cucumber-framework.git'
                    url = 'https://github.com/jdsk8r/selenium-cucumber-framework'
                }
            }
        }
    }
    repositories {
        maven {
            // change URLs to point to your repos, e.g. http://my.org/repo
            def releasesRepoUrl = layout.buildDirectory.dir('repos/releases')
            def snapshotsRepoUrl = layout.buildDirectory.dir('repos/snapshots')
            url = version.endsWith('SNAPSHOT') ? 'https://s01.oss.sonatype.org/content/repositories/snapshots/' : 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
            credentials {
                username "$ossrhUsername"
                password "$ossrhPassword"
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}


javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}